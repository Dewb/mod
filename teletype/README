README  // teletype


microfont:
http://www.timetrap.se/articles/freetajp.php

VALUE = a number (several types)
OPERATOR = a function. may need value(s) as argument(s). may return value.
VARIABLE = named memory storage
MOD = condition/rule that applies to rest of COMMAND, ie delay, prob, if, q
WORD = VALUE/VAR/OP/MOD
COMMAND = a series of WORDS, one line. (max length fit on screen?)
SCRIPT = multiple commands (8 max currently?)



(((((((((((((((((((((((((tele)))))))))))))))))))))))))

DATA TYPES
@ system
PATTERN
	extern

HELP?
error description detail


RESOLUTION.
	should full cv range be 14 bit then squished to 12 bit? right now is 15 bit. (1 bit for negative)


((((((((((((((((((((hardware))))))))))))))))))))

screen refresh method
	dirty flag per region?
	cursor


delays need a way to update odirty

break out key handler?
	lookup table for quick keys?
	spawn new event to process new key

cv system with slew (slew code is bad)

sprintf optimizations
	itoa

maybe optimize refresh_outputs()
	have array_set push a stack. handler empties stack using function table.

// ----- METRO

metro time.
	preset/metro/m.act
	metro reset?

i2c

comment out grid stuff

tr.toggle needs init??



((((((((((((((((funcs)))))))))

TR.PULSE 1-4
	interaction with manual set high/low?
--- DELAY.FLUSH

INIT (clears all vars and runs script) == PRESET PRESET
PRESET

--- M.ACT


(((pattern funcs))) N = four possible patterns

P.ADD N X		
P.REMOVE N X	
P.INSERT N Y X
P.WRAP N
P.HERE	N
P.NEXT	N
P.PREV	N
P.START N
P.END N	
P.INDEX N
P.PUSH N X
P.POP N X

PP....



((((((((((((((vars))))))))))))))

TR.TIME 1-4
CV.SLEW 1-4
CV.OFFSET 1-4
CV.TIME 1-4
CV.NOW 1-4


(patterns get/set)

P N I
P.WRAP N
P.HERE	N
P.NEXT	N
P.PREV	N
P.INDEX N
P.START N
P.END N	

PP.N
PP....







///////

use static for "local" functions, optimizes jump distance and may inline
const for pointer args that don't change.
division by constant has optimized shortcut, see google
use speed optimization on compiler
pre-increment
pre-mask counters on wrap
use unsigned for bit shifting optimization
count down for simple loops